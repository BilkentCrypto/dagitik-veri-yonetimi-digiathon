{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.bigNumberishArrayToDecimalStringArray = exports.assertInRange = exports.toFelt = exports.hexToDecimalString = exports.toHex = exports.toBN = exports.isHex = void 0;\nvar bn_js_1 = __importStar(require(\"bn.js\"));\nvar minimalistic_assert_1 = __importDefault(require(\"minimalistic-assert\"));\nvar encode_1 = require(\"./encode\");\nfunction isHex(hex) {\n  return hex.startsWith('0x');\n}\nexports.isHex = isHex;\nfunction toBN(number, base) {\n  if (typeof number === 'string') {\n    // eslint-disable-next-line no-param-reassign\n    number = number.toLowerCase();\n  }\n  if (typeof number === 'string' && isHex(number) && !base) return new bn_js_1.default((0, encode_1.removeHexPrefix)(number), 'hex');\n  return new bn_js_1.default(number, base);\n}\nexports.toBN = toBN;\nfunction toHex(number) {\n  return (0, encode_1.addHexPrefix)(number.toString('hex'));\n}\nexports.toHex = toHex;\nfunction hexToDecimalString(hex) {\n  return toBN(\"0x\".concat(hex.replace(/^0x/, ''))).toString();\n}\nexports.hexToDecimalString = hexToDecimalString;\nfunction toFelt(num) {\n  if ((0, bn_js_1.isBN)(num)) {\n    return num.toString();\n  }\n  return toBN(num).toString();\n}\nexports.toFelt = toFelt;\n/*\n Asserts input is equal to or greater then lowerBound and lower then upperBound.\n Assert message specifies inputName.\n input, lowerBound, and upperBound should be of type BN.\n inputName should be a string.\n*/\nfunction assertInRange(input, lowerBound, upperBound, inputName) {\n  if (inputName === void 0) {\n    inputName = '';\n  }\n  var messageSuffix = inputName === '' ? 'invalid length' : \"invalid \".concat(inputName, \" length\");\n  var inputBn = toBN(input);\n  (0, minimalistic_assert_1.default)(inputBn.gte(toBN(lowerBound)) && inputBn.lt(toBN(upperBound)), \"Message not signable, \".concat(messageSuffix, \".\"));\n}\nexports.assertInRange = assertInRange;\nfunction bigNumberishArrayToDecimalStringArray(rawCalldata) {\n  return rawCalldata.map(function (x) {\n    return toBN(x).toString(10);\n  });\n}\nexports.bigNumberishArrayToDecimalStringArray = bigNumberishArrayToDecimalStringArray;","map":{"version":3,"names":["__createBinding","Object","create","o","m","k","k2","undefined","desc","getOwnPropertyDescriptor","__esModule","writable","configurable","enumerable","get","defineProperty","__setModuleDefault","v","value","__importStar","mod","result","prototype","hasOwnProperty","call","__importDefault","exports","bigNumberishArrayToDecimalStringArray","assertInRange","toFelt","hexToDecimalString","toHex","toBN","isHex","bn_js_1","require","minimalistic_assert_1","encode_1","hex","startsWith","number","base","toLowerCase","default","removeHexPrefix","addHexPrefix","toString","concat","replace","num","isBN","input","lowerBound","upperBound","inputName","messageSuffix","inputBn","gte","lt","rawCalldata","map","x"],"sources":["/Users/utkukoca/Desktop/Project-Challange/my-project/node_modules/starknet/utils/number.js"],"sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.bigNumberishArrayToDecimalStringArray = exports.assertInRange = exports.toFelt = exports.hexToDecimalString = exports.toHex = exports.toBN = exports.isHex = void 0;\nvar bn_js_1 = __importStar(require(\"bn.js\"));\nvar minimalistic_assert_1 = __importDefault(require(\"minimalistic-assert\"));\nvar encode_1 = require(\"./encode\");\nfunction isHex(hex) {\n    return hex.startsWith('0x');\n}\nexports.isHex = isHex;\nfunction toBN(number, base) {\n    if (typeof number === 'string') {\n        // eslint-disable-next-line no-param-reassign\n        number = number.toLowerCase();\n    }\n    if (typeof number === 'string' && isHex(number) && !base)\n        return new bn_js_1.default((0, encode_1.removeHexPrefix)(number), 'hex');\n    return new bn_js_1.default(number, base);\n}\nexports.toBN = toBN;\nfunction toHex(number) {\n    return (0, encode_1.addHexPrefix)(number.toString('hex'));\n}\nexports.toHex = toHex;\nfunction hexToDecimalString(hex) {\n    return toBN(\"0x\".concat(hex.replace(/^0x/, ''))).toString();\n}\nexports.hexToDecimalString = hexToDecimalString;\nfunction toFelt(num) {\n    if ((0, bn_js_1.isBN)(num)) {\n        return num.toString();\n    }\n    return toBN(num).toString();\n}\nexports.toFelt = toFelt;\n/*\n Asserts input is equal to or greater then lowerBound and lower then upperBound.\n Assert message specifies inputName.\n input, lowerBound, and upperBound should be of type BN.\n inputName should be a string.\n*/\nfunction assertInRange(input, lowerBound, upperBound, inputName) {\n    if (inputName === void 0) { inputName = ''; }\n    var messageSuffix = inputName === '' ? 'invalid length' : \"invalid \".concat(inputName, \" length\");\n    var inputBn = toBN(input);\n    (0, minimalistic_assert_1.default)(inputBn.gte(toBN(lowerBound)) && inputBn.lt(toBN(upperBound)), \"Message not signable, \".concat(messageSuffix, \".\"));\n}\nexports.assertInRange = assertInRange;\nfunction bigNumberishArrayToDecimalStringArray(rawCalldata) {\n    return rawCalldata.map(function (x) { return toBN(x).toString(10); });\n}\nexports.bigNumberishArrayToDecimalStringArray = bigNumberishArrayToDecimalStringArray;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}