{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __exportStar = this && this.__exportStar || function (m, exports) {\n  for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n    r,\n    ar = [],\n    e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n  return ar;\n};\nvar __spreadArray = this && this.__spreadArray || function (to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n    if (ar || !(i in from)) {\n      if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n      ar[i] = from[i];\n    }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getMessageHash = exports.getStructHash = exports.encodeData = exports.getTypeHash = exports.encodeType = exports.getDependencies = void 0;\nvar hash_1 = require(\"../hash\");\nvar number_1 = require(\"../number\");\nvar shortString_1 = require(\"../shortString\");\nvar utils_1 = require(\"./utils\");\n__exportStar(require(\"./types\"), exports);\nfunction getHex(value) {\n  try {\n    return (0, number_1.toHex)((0, number_1.toBN)(value));\n  } catch (e) {\n    if (typeof value === 'string') {\n      return (0, number_1.toHex)((0, number_1.toBN)((0, shortString_1.encodeShortString)(value)));\n    }\n    throw new Error(\"Invalid BigNumberish: \".concat(value));\n  }\n}\n/**\n * Get the dependencies of a struct type. If a struct has the same dependency multiple times, it's only included once\n * in the resulting array.\n *\n * @param {TypedData} typedData\n * @param {string} type\n * @param {string[]} [dependencies]\n * @return {string[]}\n */\nvar getDependencies = function (typedData, type, dependencies) {\n  if (dependencies === void 0) {\n    dependencies = [];\n  }\n  // `getDependencies` is called by most other functions, so we validate the JSON schema here\n  if (!(0, utils_1.validateTypedData)(typedData)) {\n    throw new Error('Typed data does not match JSON schema');\n  }\n  // Include pointers (struct arrays)\n  if (type[type.length - 1] === '*') {\n    // eslint-disable-next-line no-param-reassign\n    type = type.slice(0, -1);\n  }\n  if (dependencies.includes(type)) {\n    return dependencies;\n  }\n  if (!typedData.types[type]) {\n    return dependencies;\n  }\n  return __spreadArray([type], __read(typedData.types[type].reduce(function (previous, t) {\n    return __spreadArray(__spreadArray([], __read(previous), false), __read((0, exports.getDependencies)(typedData, t.type, previous).filter(function (dependency) {\n      return !previous.includes(dependency);\n    })), false);\n  }, [])), false);\n};\nexports.getDependencies = getDependencies;\n/**\n * Encode a type to a string. All dependant types are alphabetically sorted.\n *\n * @param {TypedData} typedData\n * @param {string} type\n * @return {string}\n */\nvar encodeType = function (typedData, type) {\n  var _a = __read((0, exports.getDependencies)(typedData, type)),\n    primary = _a[0],\n    dependencies = _a.slice(1);\n  var types = __spreadArray([primary], __read(dependencies.sort()), false);\n  return types.map(function (dependency) {\n    return \"\".concat(dependency, \"(\").concat(typedData.types[dependency].map(function (t) {\n      return \"\".concat(t.name, \":\").concat(t.type);\n    }), \")\");\n  }).join('');\n};\nexports.encodeType = encodeType;\n/**\n * Get a type string as hash.\n *\n * @param {TypedData} typedData\n * @param {string} type\n * @return {string}\n */\nvar getTypeHash = function (typedData, type) {\n  return (0, hash_1.getSelectorFromName)((0, exports.encodeType)(typedData, type));\n};\nexports.getTypeHash = getTypeHash;\n/**\n * Encodes a single value to an ABI serialisable string, number or Buffer. Returns the data as tuple, which consists of\n * an array of ABI compatible types, and an array of corresponding values.\n *\n * @param {TypedData} typedData\n * @param {string} type\n * @param {any} data\n * @returns {[string, string]}\n */\nvar encodeValue = function (typedData, type, data) {\n  if (typedData.types[type]) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    return [type, (0, exports.getStructHash)(typedData, type, data)];\n  }\n  if (Object.keys(typedData.types).map(function (x) {\n    return \"\".concat(x, \"*\");\n  }).includes(type)) {\n    var structHashes = data.map(function (struct) {\n      // eslint-disable-next-line @typescript-eslint/no-use-before-define\n      return (0, exports.getStructHash)(typedData, type.slice(0, -1), struct);\n    });\n    return [type, (0, hash_1.computeHashOnElements)(structHashes)];\n  }\n  if (type === 'felt*') {\n    return ['felt*', (0, hash_1.computeHashOnElements)(data)];\n  }\n  return [type, getHex(data)];\n};\n/**\n * Encode the data to an ABI encoded Buffer. The data should be a key -> value object with all the required values. All\n * dependant types are automatically encoded.\n *\n * @param {TypedData} typedData\n * @param {string} type\n * @param {Record<string, any>} data\n */\nvar encodeData = function (typedData, type, data) {\n  var _a = __read(typedData.types[type].reduce(function (_a, field) {\n      var _b = __read(_a, 2),\n        ts = _b[0],\n        vs = _b[1];\n      if (data[field.name] === undefined || data[field.name] === null) {\n        throw new Error(\"Cannot encode data: missing data for '\".concat(field.name, \"'\"));\n      }\n      var value = data[field.name];\n      var _c = __read(encodeValue(typedData, field.type, value), 2),\n        t = _c[0],\n        encodedValue = _c[1];\n      return [__spreadArray(__spreadArray([], __read(ts), false), [t], false), __spreadArray(__spreadArray([], __read(vs), false), [encodedValue], false)];\n    }, [['felt'], [(0, exports.getTypeHash)(typedData, type)]]), 2),\n    types = _a[0],\n    values = _a[1];\n  return [types, values];\n};\nexports.encodeData = encodeData;\n/**\n * Get encoded data as a hash. The data should be a key -> value object with all the required values. All dependant\n * types are automatically encoded.\n *\n * @param {TypedData} typedData\n * @param {string} type\n * @param {Record<string, any>} data\n * @return {Buffer}\n */\nvar getStructHash = function (typedData, type, data) {\n  return (0, hash_1.computeHashOnElements)((0, exports.encodeData)(typedData, type, data)[1]);\n};\nexports.getStructHash = getStructHash;\n/**\n * Get the EIP-191 encoded message to sign, from the typedData object. If `hash` is enabled, the message will be hashed\n * with Keccak256.\n *\n * @param {TypedData} typedData\n * @param {BigNumberish} account\n * @return {string}\n */\nvar getMessageHash = function (typedData, account) {\n  var message = [(0, shortString_1.encodeShortString)('StarkNet Message'), (0, exports.getStructHash)(typedData, 'StarkNetDomain', typedData.domain), account, (0, exports.getStructHash)(typedData, typedData.primaryType, typedData.message)];\n  return (0, hash_1.computeHashOnElements)(message);\n};\nexports.getMessageHash = getMessageHash;","map":{"version":3,"names":["__createBinding","Object","create","o","m","k","k2","undefined","desc","getOwnPropertyDescriptor","__esModule","writable","configurable","enumerable","get","defineProperty","__exportStar","exports","p","prototype","hasOwnProperty","call","__read","n","Symbol","iterator","i","r","ar","e","next","done","push","value","error","__spreadArray","to","from","pack","arguments","length","l","Array","slice","concat","getMessageHash","getStructHash","encodeData","getTypeHash","encodeType","getDependencies","hash_1","require","number_1","shortString_1","utils_1","getHex","toHex","toBN","encodeShortString","Error","typedData","type","dependencies","validateTypedData","includes","types","reduce","previous","t","filter","dependency","_a","primary","sort","map","name","join","getSelectorFromName","encodeValue","data","keys","x","structHashes","struct","computeHashOnElements","field","_b","ts","vs","_c","encodedValue","values","account","message","domain","primaryType"],"sources":["/Users/utkukoca/Desktop/Project-Challange/my-project/node_modules/starknet/dist/utils/typedData/index.js"],"sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getMessageHash = exports.getStructHash = exports.encodeData = exports.getTypeHash = exports.encodeType = exports.getDependencies = void 0;\nvar hash_1 = require(\"../hash\");\nvar number_1 = require(\"../number\");\nvar shortString_1 = require(\"../shortString\");\nvar utils_1 = require(\"./utils\");\n__exportStar(require(\"./types\"), exports);\nfunction getHex(value) {\n    try {\n        return (0, number_1.toHex)((0, number_1.toBN)(value));\n    }\n    catch (e) {\n        if (typeof value === 'string') {\n            return (0, number_1.toHex)((0, number_1.toBN)((0, shortString_1.encodeShortString)(value)));\n        }\n        throw new Error(\"Invalid BigNumberish: \".concat(value));\n    }\n}\n/**\n * Get the dependencies of a struct type. If a struct has the same dependency multiple times, it's only included once\n * in the resulting array.\n *\n * @param {TypedData} typedData\n * @param {string} type\n * @param {string[]} [dependencies]\n * @return {string[]}\n */\nvar getDependencies = function (typedData, type, dependencies) {\n    if (dependencies === void 0) { dependencies = []; }\n    // `getDependencies` is called by most other functions, so we validate the JSON schema here\n    if (!(0, utils_1.validateTypedData)(typedData)) {\n        throw new Error('Typed data does not match JSON schema');\n    }\n    // Include pointers (struct arrays)\n    if (type[type.length - 1] === '*') {\n        // eslint-disable-next-line no-param-reassign\n        type = type.slice(0, -1);\n    }\n    if (dependencies.includes(type)) {\n        return dependencies;\n    }\n    if (!typedData.types[type]) {\n        return dependencies;\n    }\n    return __spreadArray([\n        type\n    ], __read(typedData.types[type].reduce(function (previous, t) { return __spreadArray(__spreadArray([], __read(previous), false), __read((0, exports.getDependencies)(typedData, t.type, previous).filter(function (dependency) { return !previous.includes(dependency); })), false); }, [])), false);\n};\nexports.getDependencies = getDependencies;\n/**\n * Encode a type to a string. All dependant types are alphabetically sorted.\n *\n * @param {TypedData} typedData\n * @param {string} type\n * @return {string}\n */\nvar encodeType = function (typedData, type) {\n    var _a = __read((0, exports.getDependencies)(typedData, type)), primary = _a[0], dependencies = _a.slice(1);\n    var types = __spreadArray([primary], __read(dependencies.sort()), false);\n    return types\n        .map(function (dependency) {\n        return \"\".concat(dependency, \"(\").concat(typedData.types[dependency].map(function (t) { return \"\".concat(t.name, \":\").concat(t.type); }), \")\");\n    })\n        .join('');\n};\nexports.encodeType = encodeType;\n/**\n * Get a type string as hash.\n *\n * @param {TypedData} typedData\n * @param {string} type\n * @return {string}\n */\nvar getTypeHash = function (typedData, type) {\n    return (0, hash_1.getSelectorFromName)((0, exports.encodeType)(typedData, type));\n};\nexports.getTypeHash = getTypeHash;\n/**\n * Encodes a single value to an ABI serialisable string, number or Buffer. Returns the data as tuple, which consists of\n * an array of ABI compatible types, and an array of corresponding values.\n *\n * @param {TypedData} typedData\n * @param {string} type\n * @param {any} data\n * @returns {[string, string]}\n */\nvar encodeValue = function (typedData, type, data) {\n    if (typedData.types[type]) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        return [type, (0, exports.getStructHash)(typedData, type, data)];\n    }\n    if (Object.keys(typedData.types)\n        .map(function (x) { return \"\".concat(x, \"*\"); })\n        .includes(type)) {\n        var structHashes = data.map(function (struct) {\n            // eslint-disable-next-line @typescript-eslint/no-use-before-define\n            return (0, exports.getStructHash)(typedData, type.slice(0, -1), struct);\n        });\n        return [type, (0, hash_1.computeHashOnElements)(structHashes)];\n    }\n    if (type === 'felt*') {\n        return ['felt*', (0, hash_1.computeHashOnElements)(data)];\n    }\n    return [type, getHex(data)];\n};\n/**\n * Encode the data to an ABI encoded Buffer. The data should be a key -> value object with all the required values. All\n * dependant types are automatically encoded.\n *\n * @param {TypedData} typedData\n * @param {string} type\n * @param {Record<string, any>} data\n */\nvar encodeData = function (typedData, type, data) {\n    var _a = __read(typedData.types[type].reduce(function (_a, field) {\n        var _b = __read(_a, 2), ts = _b[0], vs = _b[1];\n        if (data[field.name] === undefined || data[field.name] === null) {\n            throw new Error(\"Cannot encode data: missing data for '\".concat(field.name, \"'\"));\n        }\n        var value = data[field.name];\n        var _c = __read(encodeValue(typedData, field.type, value), 2), t = _c[0], encodedValue = _c[1];\n        return [\n            __spreadArray(__spreadArray([], __read(ts), false), [t], false),\n            __spreadArray(__spreadArray([], __read(vs), false), [encodedValue], false),\n        ];\n    }, [['felt'], [(0, exports.getTypeHash)(typedData, type)]]), 2), types = _a[0], values = _a[1];\n    return [types, values];\n};\nexports.encodeData = encodeData;\n/**\n * Get encoded data as a hash. The data should be a key -> value object with all the required values. All dependant\n * types are automatically encoded.\n *\n * @param {TypedData} typedData\n * @param {string} type\n * @param {Record<string, any>} data\n * @return {Buffer}\n */\nvar getStructHash = function (typedData, type, data) {\n    return (0, hash_1.computeHashOnElements)((0, exports.encodeData)(typedData, type, data)[1]);\n};\nexports.getStructHash = getStructHash;\n/**\n * Get the EIP-191 encoded message to sign, from the typedData object. If `hash` is enabled, the message will be hashed\n * with Keccak256.\n *\n * @param {TypedData} typedData\n * @param {BigNumberish} account\n * @return {string}\n */\nvar getMessageHash = function (typedData, account) {\n    var message = [\n        (0, shortString_1.encodeShortString)('StarkNet Message'),\n        (0, exports.getStructHash)(typedData, 'StarkNetDomain', typedData.domain),\n        account,\n        (0, exports.getStructHash)(typedData, typedData.primaryType, typedData.message),\n    ];\n    return (0, hash_1.computeHashOnElements)(message);\n};\nexports.getMessageHash = getMessageHash;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}