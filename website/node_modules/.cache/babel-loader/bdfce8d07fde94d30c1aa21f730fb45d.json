{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useInvalidateOnBlock = void 0;\nconst react_query_1 = require(\"@tanstack/react-query\");\nconst react_1 = require(\"react\");\nconst block_1 = require(\"./block\");\n/**\n * Invalidate the given query on every new block.\n */\nfunction useInvalidateOnBlock(_ref) {\n  let {\n    enabled,\n    queryKey\n  } = _ref;\n  const queryClient = (0, react_query_1.useQueryClient)();\n  const [previousHash, setPreviousHash] = (0, react_1.useState)(undefined);\n  (0, block_1.useBlock)({\n    refetchInterval: 5000,\n    onSuccess: enabled ? async block => {\n      if (block.block_hash !== previousHash) {\n        await queryClient.invalidateQueries(queryKey, {\n          refetchType: 'all'\n        });\n        setPreviousHash(block.block_hash);\n      }\n    } : undefined\n  });\n}\nexports.useInvalidateOnBlock = useInvalidateOnBlock;","map":{"version":3,"mappings":";;;;;;AAAA;AACA;AACA;AAEA;;;AAGA,SAAgBA,oBAAoB,OAMnC;EAAA,IANoC;IACnCC,OAAO;IACPC;EAAQ,CAIT;EACC,MAAMC,WAAW,GAAG,gCAAc,GAAE;EACpC,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAG,oBAAQ,EAAqBC,SAAS,CAAC;EAE/E,oBAAQ,EAAC;IACPC,eAAe,EAAE,IAAI;IACrBC,SAAS,EAAEP,OAAO,GACd,MAAOQ,KAAK,IAAI;MACd,IAAIA,KAAK,CAACC,UAAU,KAAKN,YAAY,EAAE;QACrC,MAAMD,WAAW,CAACQ,iBAAiB,CAACT,QAAQ,EAAE;UAAEU,WAAW,EAAE;QAAK,CAAE,CAAC;QACrEP,eAAe,CAACI,KAAK,CAACC,UAAU,CAAC;;IAErC,CAAC,GACDJ;GACL,CAAC;AACJ;AArBAO","names":["useInvalidateOnBlock","enabled","queryKey","queryClient","previousHash","setPreviousHash","undefined","refetchInterval","onSuccess","block","block_hash","invalidateQueries","refetchType","exports"],"sources":["../../src/hooks/invalidate.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}