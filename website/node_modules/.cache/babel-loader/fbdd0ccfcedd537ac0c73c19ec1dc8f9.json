{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useStarknetInvoke = void 0;\nconst react_query_1 = require(\"@tanstack/react-query\");\n/**\n * Hook to invoke a smart contract method.\n *\n * @remarks\n *\n * This hook calls the `Contract.invoke` method under the hood.\n * Arguments should be encoded according to the starknet.js version\n * you're using.\n *\n * @deprecated Use {@link useStarknetExecute} instead.\n *\n * @example\n * This example shows how to transfer some ETH.\n * ```tsx\n * function Component() {\n *   const { address } = useAccount()\n *   const { contract } = useContract({\n *     abi: compiledErc20.abi,\n *     address: ethAddress,\n *   })\n *   const { invoke } = useStarknetInvoke({\n *     contract,\n *     method: 'transfer',\n *   })\n *\n *   return (\n *     <button onClick={() => invoke({ args: [address, [1, 0]] })}>\n *       Invoke\n *     </button>\n *   )\n * }\n * ```\n */\nfunction useStarknetInvoke(_ref) {\n  let {\n    contract,\n    method\n  } = _ref;\n  const {\n    data,\n    isLoading,\n    error,\n    reset,\n    mutateAsync\n  } = (0, react_query_1.useMutation)(writeContract({\n    contract,\n    method\n  }));\n  return {\n    data,\n    loading: isLoading,\n    error: error ?? undefined,\n    reset,\n    invoke: mutateAsync\n  };\n}\nexports.useStarknetInvoke = useStarknetInvoke;\nfunction writeContract(_ref2) {\n  let {\n    contract,\n    method\n  } = _ref2;\n  return async _ref3 => {\n    let {\n      args,\n      metadata,\n      overrides\n    } = _ref3;\n    if (contract === undefined) {\n      throw new Error('No contract specified');\n    }\n    if (method === undefined) {\n      throw new Error('No method specified');\n    }\n    const response = await contract.invoke(method, args, overrides);\n    console.warn(`TODO: ignoring metadata`, metadata);\n    return response;\n  };\n}","map":{"version":3,"mappings":";;;;;;AAAA;AAoCA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiCA,SAAgBA,iBAAiB,OAGT;EAAA,IAH+B;IACrDC,QAAQ;IACRC;EAAM,CACgB;EACtB,MAAM;IAAEC,IAAI;IAAEC,SAAS;IAAEC,KAAK;IAAEC,KAAK;IAAEC;EAAW,CAAE,GAAG,6BAAW,EAChEC,aAAa,CAAC;IAAEP,QAAQ;IAAEC;EAAM,CAAE,CAAC,CACpC;EAED,OAAO;IACLC,IAAI;IACJM,OAAO,EAAEL,SAAS;IAClBC,KAAK,EAAEA,KAAK,IAAIK,SAAS;IACzBJ,KAAK;IACLK,MAAM,EAAEJ;GACT;AACH;AAfAK;AAiBA,SAASJ,aAAa,QAMrB;EAAA,IAN2C;IAC1CP,QAAQ;IACRC;EAAM,CAIP;EACC,OAAO,eAAuD;IAAA,IAAhD;MAAEW,IAAI;MAAEC,QAAQ;MAAEC;IAAS,CAAiB;IACxD,IAAId,QAAQ,KAAKS,SAAS,EAAE;MAC1B,MAAM,IAAIM,KAAK,CAAC,uBAAuB,CAAC;;IAE1C,IAAId,MAAM,KAAKQ,SAAS,EAAE;MACxB,MAAM,IAAIM,KAAK,CAAC,qBAAqB,CAAC;;IAExC,MAAMC,QAAQ,GAAG,MAAMhB,QAAQ,CAACU,MAAM,CAACT,MAAM,EAAEW,IAAI,EAAEE,SAAS,CAAC;IAC/DG,OAAO,CAACC,IAAI,CAAC,yBAAyB,EAAEL,QAAQ,CAAC;IACjD,OAAOG,QAAQ;EACjB,CAAC;AACH","names":["useStarknetInvoke","contract","method","data","isLoading","error","reset","mutateAsync","writeContract","loading","undefined","invoke","exports","args","metadata","overrides","Error","response","console","warn"],"sources":["../../src/hooks/invoke.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}