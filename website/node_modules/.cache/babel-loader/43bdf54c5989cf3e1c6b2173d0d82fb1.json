{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getFormattedBlockIdentifier = exports.getBlockIdentifier = exports.txIdentifier = exports.formatHash = void 0;\nvar number_1 = require(\"../utils/number\");\n/**\n *\n * [Reference](https://github.com/starkware-libs/cairo-lang/blob/fc97bdd8322a7df043c87c371634b26c15ed6cee/src/starkware/starknet/services/api/feeder_gateway/feeder_gateway_client.py#L148-L153)\n *\n * @param hashValue\n * @param hashField\n */\nfunction formatHash(hashValue) {\n  if (typeof hashValue === 'string') return hashValue;\n  return (0, number_1.toHex)((0, number_1.toBN)(hashValue));\n}\nexports.formatHash = formatHash;\n/**\n *\n * [Reference](https://github.com/starkware-libs/cairo-lang/blob/fc97bdd8322a7df043c87c371634b26c15ed6cee/src/starkware/starknet/services/api/feeder_gateway/feeder_gateway_client.py#L156-L161)\n * @param txHash\n * @param txId\n */\nfunction txIdentifier(txHash, txId) {\n  if (!txHash) {\n    return \"transactionId=\".concat(JSON.stringify(txId));\n  }\n  var hashString = formatHash(txHash);\n  return \"transactionHash=\".concat(hashString);\n}\nexports.txIdentifier = txIdentifier;\n/**\n * Identifies the block to be queried.\n *\n * @param blockIdentifier - block identifier\n * @returns block identifier object\n */\nfunction getBlockIdentifier(blockIdentifier) {\n  if (blockIdentifier === null || blockIdentifier === 'latest') {\n    return {\n      type: 'BLOCK_NUMBER',\n      data: 'latest'\n    }; // default to latest block\n  }\n\n  if (blockIdentifier === 'pending') {\n    return {\n      type: 'BLOCK_NUMBER',\n      data: 'pending'\n    };\n  }\n  if (typeof blockIdentifier === 'number' || typeof blockIdentifier === 'bigint') {\n    return {\n      type: 'BLOCK_NUMBER',\n      data: blockIdentifier\n    };\n  }\n  if (typeof blockIdentifier === 'string' && blockIdentifier.startsWith('0x')) {\n    return {\n      type: 'BLOCK_HASH',\n      data: blockIdentifier\n    };\n  }\n  if (typeof blockIdentifier === 'string' && !Number.isNaN(parseInt(blockIdentifier, 10))) {\n    return {\n      type: 'BLOCK_NUMBER',\n      data: parseInt(blockIdentifier, 10)\n    };\n  }\n  if (typeof blockIdentifier === 'string') {\n    throw new Error(\"Invalid block identifier: \".concat(blockIdentifier));\n  }\n  return {\n    type: 'BLOCK_HASH',\n    data: blockIdentifier\n  };\n}\nexports.getBlockIdentifier = getBlockIdentifier;\n/**\n * Gets the block identifier for API request\n *\n * [Reference](https://github.com/starkware-libs/cairo-lang/blob/fc97bdd8322a7df043c87c371634b26c15ed6cee/src/starkware/starknet/services/api/feeder_gateway/feeder_gateway_client.py#L164-L173)\n *\n * @param blockIdentifier\n * @returns block identifier for API request\n */\nfunction getFormattedBlockIdentifier(blockIdentifier) {\n  if (blockIdentifier === void 0) {\n    blockIdentifier = null;\n  }\n  var blockIdentifierObject = getBlockIdentifier(blockIdentifier);\n  if (blockIdentifierObject.type === 'BLOCK_NUMBER' && blockIdentifierObject.data === null) {\n    return '';\n  }\n  if (blockIdentifierObject.type === 'BLOCK_NUMBER') {\n    return \"blockNumber=\".concat(blockIdentifierObject.data);\n  }\n  return \"blockHash=\".concat((0, number_1.toHex)((0, number_1.toBN)(blockIdentifierObject.data)));\n}\nexports.getFormattedBlockIdentifier = getFormattedBlockIdentifier;","map":{"version":3,"names":["Object","defineProperty","exports","value","getFormattedBlockIdentifier","getBlockIdentifier","txIdentifier","formatHash","number_1","require","hashValue","toHex","toBN","txHash","txId","concat","JSON","stringify","hashString","blockIdentifier","type","data","startsWith","Number","isNaN","parseInt","Error","blockIdentifierObject"],"sources":["/Users/utkukoca/Desktop/Project-Challange/my-project/node_modules/starknet/dist/provider/utils.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getFormattedBlockIdentifier = exports.getBlockIdentifier = exports.txIdentifier = exports.formatHash = void 0;\nvar number_1 = require(\"../utils/number\");\n/**\n *\n * [Reference](https://github.com/starkware-libs/cairo-lang/blob/fc97bdd8322a7df043c87c371634b26c15ed6cee/src/starkware/starknet/services/api/feeder_gateway/feeder_gateway_client.py#L148-L153)\n *\n * @param hashValue\n * @param hashField\n */\nfunction formatHash(hashValue) {\n    if (typeof hashValue === 'string')\n        return hashValue;\n    return (0, number_1.toHex)((0, number_1.toBN)(hashValue));\n}\nexports.formatHash = formatHash;\n/**\n *\n * [Reference](https://github.com/starkware-libs/cairo-lang/blob/fc97bdd8322a7df043c87c371634b26c15ed6cee/src/starkware/starknet/services/api/feeder_gateway/feeder_gateway_client.py#L156-L161)\n * @param txHash\n * @param txId\n */\nfunction txIdentifier(txHash, txId) {\n    if (!txHash) {\n        return \"transactionId=\".concat(JSON.stringify(txId));\n    }\n    var hashString = formatHash(txHash);\n    return \"transactionHash=\".concat(hashString);\n}\nexports.txIdentifier = txIdentifier;\n/**\n * Identifies the block to be queried.\n *\n * @param blockIdentifier - block identifier\n * @returns block identifier object\n */\nfunction getBlockIdentifier(blockIdentifier) {\n    if (blockIdentifier === null || blockIdentifier === 'latest') {\n        return { type: 'BLOCK_NUMBER', data: 'latest' }; // default to latest block\n    }\n    if (blockIdentifier === 'pending') {\n        return { type: 'BLOCK_NUMBER', data: 'pending' };\n    }\n    if (typeof blockIdentifier === 'number' || typeof blockIdentifier === 'bigint') {\n        return { type: 'BLOCK_NUMBER', data: blockIdentifier };\n    }\n    if (typeof blockIdentifier === 'string' && blockIdentifier.startsWith('0x')) {\n        return { type: 'BLOCK_HASH', data: blockIdentifier };\n    }\n    if (typeof blockIdentifier === 'string' && !Number.isNaN(parseInt(blockIdentifier, 10))) {\n        return { type: 'BLOCK_NUMBER', data: parseInt(blockIdentifier, 10) };\n    }\n    if (typeof blockIdentifier === 'string') {\n        throw new Error(\"Invalid block identifier: \".concat(blockIdentifier));\n    }\n    return { type: 'BLOCK_HASH', data: blockIdentifier };\n}\nexports.getBlockIdentifier = getBlockIdentifier;\n/**\n * Gets the block identifier for API request\n *\n * [Reference](https://github.com/starkware-libs/cairo-lang/blob/fc97bdd8322a7df043c87c371634b26c15ed6cee/src/starkware/starknet/services/api/feeder_gateway/feeder_gateway_client.py#L164-L173)\n *\n * @param blockIdentifier\n * @returns block identifier for API request\n */\nfunction getFormattedBlockIdentifier(blockIdentifier) {\n    if (blockIdentifier === void 0) { blockIdentifier = null; }\n    var blockIdentifierObject = getBlockIdentifier(blockIdentifier);\n    if (blockIdentifierObject.type === 'BLOCK_NUMBER' && blockIdentifierObject.data === null) {\n        return '';\n    }\n    if (blockIdentifierObject.type === 'BLOCK_NUMBER') {\n        return \"blockNumber=\".concat(blockIdentifierObject.data);\n    }\n    return \"blockHash=\".concat((0, number_1.toHex)((0, number_1.toBN)(blockIdentifierObject.data)));\n}\nexports.getFormattedBlockIdentifier = getFormattedBlockIdentifier;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}