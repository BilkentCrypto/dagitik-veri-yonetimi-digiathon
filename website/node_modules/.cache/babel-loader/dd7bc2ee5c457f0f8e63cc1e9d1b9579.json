{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nrequire('./setBatchUpdatesFn.js');\nvar queryCore = require('@tanstack/query-core');\nvar useQueries = require('./useQueries.js');\nvar useQuery = require('./useQuery.js');\nvar QueryClientProvider = require('./QueryClientProvider.js');\nvar Hydrate = require('./Hydrate.js');\nvar QueryErrorResetBoundary = require('./QueryErrorResetBoundary.js');\nvar useIsFetching = require('./useIsFetching.js');\nvar useIsMutating = require('./useIsMutating.js');\nvar useMutation = require('./useMutation.js');\nvar useInfiniteQuery = require('./useInfiniteQuery.js');\nvar isRestoring = require('./isRestoring.js');\nexports.useQueries = useQueries.useQueries;\nexports.useQuery = useQuery.useQuery;\nexports.QueryClientProvider = QueryClientProvider.QueryClientProvider;\nexports.defaultContext = QueryClientProvider.defaultContext;\nexports.useQueryClient = QueryClientProvider.useQueryClient;\nexports.Hydrate = Hydrate.Hydrate;\nexports.useHydrate = Hydrate.useHydrate;\nexports.QueryErrorResetBoundary = QueryErrorResetBoundary.QueryErrorResetBoundary;\nexports.useQueryErrorResetBoundary = QueryErrorResetBoundary.useQueryErrorResetBoundary;\nexports.useIsFetching = useIsFetching.useIsFetching;\nexports.useIsMutating = useIsMutating.useIsMutating;\nexports.useMutation = useMutation.useMutation;\nexports.useInfiniteQuery = useInfiniteQuery.useInfiniteQuery;\nexports.IsRestoringProvider = isRestoring.IsRestoringProvider;\nexports.useIsRestoring = isRestoring.useIsRestoring;\nObject.keys(queryCore).forEach(function (k) {\n  if (k !== 'default' && !exports.hasOwnProperty(k)) Object.defineProperty(exports, k, {\n    enumerable: true,\n    get: function () {\n      return queryCore[k];\n    }\n  });\n});","map":{"version":3,"mappings":"","names":[],"sources":[],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nrequire('./setBatchUpdatesFn.js');\nvar queryCore = require('@tanstack/query-core');\nvar useQueries = require('./useQueries.js');\nvar useQuery = require('./useQuery.js');\nvar QueryClientProvider = require('./QueryClientProvider.js');\nvar Hydrate = require('./Hydrate.js');\nvar QueryErrorResetBoundary = require('./QueryErrorResetBoundary.js');\nvar useIsFetching = require('./useIsFetching.js');\nvar useIsMutating = require('./useIsMutating.js');\nvar useMutation = require('./useMutation.js');\nvar useInfiniteQuery = require('./useInfiniteQuery.js');\nvar isRestoring = require('./isRestoring.js');\n\n\n\nexports.useQueries = useQueries.useQueries;\nexports.useQuery = useQuery.useQuery;\nexports.QueryClientProvider = QueryClientProvider.QueryClientProvider;\nexports.defaultContext = QueryClientProvider.defaultContext;\nexports.useQueryClient = QueryClientProvider.useQueryClient;\nexports.Hydrate = Hydrate.Hydrate;\nexports.useHydrate = Hydrate.useHydrate;\nexports.QueryErrorResetBoundary = QueryErrorResetBoundary.QueryErrorResetBoundary;\nexports.useQueryErrorResetBoundary = QueryErrorResetBoundary.useQueryErrorResetBoundary;\nexports.useIsFetching = useIsFetching.useIsFetching;\nexports.useIsMutating = useIsMutating.useIsMutating;\nexports.useMutation = useMutation.useMutation;\nexports.useInfiniteQuery = useInfiniteQuery.useInfiniteQuery;\nexports.IsRestoringProvider = isRestoring.IsRestoringProvider;\nexports.useIsRestoring = isRestoring.useIsRestoring;\nObject.keys(queryCore).forEach(function (k) {\n  if (k !== 'default' && !exports.hasOwnProperty(k)) Object.defineProperty(exports, k, {\n    enumerable: true,\n    get: function () { return queryCore[k]; }\n  });\n});\n"]},"metadata":{},"sourceType":"script"}